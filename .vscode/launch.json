{
    "configurations": [
        {
            "type": "java",
            "name": "AuthServiceApplication",
            "request": "launch",
            "mainClass": "com.example.authservice.AuthServiceApplication",
            "projectName": "auth-service",
            "vmArgs": " -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=62438 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dspring.jmx.enabled=true -Djava.rmi.server.hostname=localhost -Dspring.application.admin.enabled=true -Dspring.boot.project.name=auth-service"
        },
        {
            "type": "java",
            "name": "AdminServerApplication",
            "request": "launch",
            "mainClass": "org.example.adminserver.AdminServerApplication",
            "projectName": "admin-server",
            "vmArgs": " -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=62405 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dspring.jmx.enabled=true -Djava.rmi.server.hostname=localhost -Dspring.application.admin.enabled=true -Dspring.boot.project.name=admin-server"
        },
        {
            "type": "java",
            "name": "EurekaServerApplication",
            "request": "launch",
            "mainClass": "org.example.eurekaserver.EurekaServerApplication",
            "projectName": "eureka-server",
            "vmArgs": " -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=62391 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dspring.jmx.enabled=true -Djava.rmi.server.hostname=localhost -Dspring.application.admin.enabled=true -Dspring.boot.project.name=eureka-server"
        },
        {
            "name": "Launch Edge",
            "request": "launch",
            "type": "msedge",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceFolder}\\react-app"
        },
        {
            "type": "node-terminal",
            "name": "Run Script: dev",
            "request": "launch",
            "command": "npm run dev",
            "cwd": "${workspaceFolder}\\react-app"
        },
        {
            "type": "java",
            "name": "Spring Boot-UserServiceApplication<user-service>",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "mainClass": "org.example.userservice.UserServiceApplication",
            "projectName": "user-service",
            "args": "",
            "envFile": "${workspaceFolder}/.env",
            "vmArgs": " -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=55737 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dspring.jmx.enabled=true -Djava.rmi.server.hostname=localhost -Dspring.application.admin.enabled=true -Dspring.boot.project.name=user-service"
        },
        {
            "type": "java",
            "name": "Spring Boot-TaskServiceApplication<task-service>",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "mainClass": "org.example.taskservice.TaskServiceApplication",
            "projectName": "task-service",
            "args": "",
            "envFile": "${workspaceFolder}/.env",
            "vmArgs": " -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=55730 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dspring.jmx.enabled=true -Djava.rmi.server.hostname=localhost -Dspring.application.admin.enabled=true -Dspring.boot.project.name=task-service"
        },
        {
            "type": "java",
            "name": "Spring Boot-ApiGatewayApplication<api-gateway>",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "mainClass": "org.example.apigateway.ApiGatewayApplication",
            "projectName": "api-gateway",
            "args": "",
            "envFile": "${workspaceFolder}/.env"
        },
        {
            "type": "java",
            "name": "Spring Boot-NotificationServiceApplication<notification-service>",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "mainClass": "org.example.notificationservice.NotificationServiceApplication",
            "projectName": "notification-service",
            "args": "",
            "envFile": "${workspaceFolder}/.env"
        },
        {
            "type": "java",
            "name": "Spring Boot-CommentServiceApplication<comment-service>",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "mainClass": "org.example.commentservice.CommentServiceApplication",
            "projectName": "comment-service",
            "args": "",
            "envFile": "${workspaceFolder}/.env"
        }
    ]
}