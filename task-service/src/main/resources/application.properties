spring.application.name=task-service
server.port=8082

spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update

# Hikari Connection Pool Config
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.max-lifetime=30000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.leak-detection-threshold=10000

# OpenFeign Timeout Config
spring.cloud.openfeign.circuitbreaker.enabled=true
spring.cloud.openfeign.client.config.default.connect-timeout=2000
spring.cloud.openfeign.client.config.default.read-timeout=5000

# Resilience4j CircuitBreaker Config
resilience4j.circuitbreaker.instances.notificationServiceCB.failure-rate-threshold=40
resilience4j.circuitbreaker.instances.notificationServiceCB.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.notificationServiceCB.slow-call-duration-threshold=3s
resilience4j.circuitbreaker.instances.notificationServiceCB.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.notificationServiceCB.permitted-number-of-calls-in-half-open-state=5
resilience4j.circuitbreaker.instances.notificationServiceCB.sliding-window-size=10
resilience4j.circuitbreaker.instances.notificationServiceCB.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.notificationServiceCB.automatic-transition-from-open-to-half-open-enabled=true

# Resilience Retry Config
resilience4j.retry.instances.notificationRetry.max-attempts=3
resilience4j.retry.instances.notificationRetry.wait-duration=1s
resilience4j.retry.instances.notificationRetry.enable-exponential-backoff=true
resilience4j.retry.instances.notificationRetry.exponential-backoff-multiplier=2
resilience4j.retry.instances.notificationRetry.exponential-max-wait-duration=10s

# Resilience4j RateLimiter Config
resilience4j.ratelimiter.instances.notificationRateLimiter.limit-for-period=20
resilience4j.ratelimiter.instances.notificationRateLimiter.limit-refresh-period=1s
resilience4j.ratelimiter.instances.notificationRateLimiter.timeout-duration=0s

# Eureka Config
eureka.client.service-url.defaultZone=${EUREKA_URL}
eureka.instance.hostname=${HOSTNAME}

# Spring Boot Admin Monitoring
spring.boot.admin.client.url=${ADMIN_URL}
spring.boot.admin.client.instance.service-base-url=${TASK_SERVICE_URL}
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true